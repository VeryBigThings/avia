name: "Test, build & deploy - develop env"

on:
  push:
    branches:
      - develop
      - adapt-to-beanstalk

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.4
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
        ports:
          - 9200:9200
    env:
      CACHE_VERSION: v1
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-elixir@v1
        with:
          otp-version: 22.3.4.2
          elixir-version: 1.10.4

      - name: Restore cached deps
        uses: actions/cache@v2
        with:
          path: |
            deps
             _build
          key: deps-${{ env.CACHE_VERSION }}-${{ github.ref }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            deps-${{ env.CACHE_VERSION }}-${{ github.ref }}-
            deps-${{ env.CACHE_VERSION }}-

      - name: Install wkhtmltopdf deps
        run: |
          wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
          tar vxf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
          sudo cp wkhtmltox/bin/wk* /usr/local/bin/

      - name: Run CI checks
        uses: ./.github/workflows/actions/test
        with:
          ssh-private-key: ${{ secrets.VBT_DEPLOY_SSH_PRIVATE_KEY }}
          AVIA_DOCS:  ${{ secrets.AVIA_DOCS }}
          ADMIN_PORT:  ${{ secrets.ADMIN_PORT }}
          API_PORT:  ${{ secrets.API_PORT }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_REGION:  ${{ secrets.AWS_REGION }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BACKEND_URL:  ${{ secrets.BACKEND_URL }}
          BUCKET_NAME:  ${{ secrets.BUCKET_NAME }}
          DB_URL:  ${{ secrets.DB_URL }}
          ELASTIC_HOST:  ${{ secrets.ELASTIC_HOST }}
          ETSY_CONSUMER_KEY:  ${{ secrets.ETSY_CONSUMER_KEY }}
          ETSY_CONSUMER_SECRET:  ${{ secrets.ETSY_CONSUMER_SECRET }}
          FRONTEND_CHECKOUT_URL:  ${{ secrets.FRONTEND_CHECKOUT_URL }}
          FRONTEND_URL:  ${{ secrets.FRONTEND_URL }}
          HOST:  ${{ secrets.HOST }}
          HOSTED_PAYMENT_URL:  ${{ secrets.HOSTED_PAYMENT_URL }}
          PASSWORD_RESET_SALT:  ${{ secrets.PASSWORD_RESET_SALT }}
          POOL_SIZE:  ${{ secrets.POOL_SIZE }}
          SENDGRID_API_KEY:  ${{ secrets.SENDGRID_API_KEY }}
          SENDGRID_SENDER_EMAIL:  ${{ secrets.SENDGRID_SENDER_EMAIL }}
          SESSION_COOKIE_NAME:  ${{ secrets.SESSION_COOKIE_NAME }}
          SESSION_COOKIE_SIGNING_SALT:  ${{ secrets.SESSION_COOKIE_SIGNING_SALT }}
          SESSION_COOKIE_ENCRYPTION_SALT:  ${{ secrets.SESSION_COOKIE_ENCRYPTION_SALT }}
          SUPPORT_URL:  ${{ secrets.SUPPORT_URL }}
          SECRET_KEY_BASE:  ${{ secrets.SECRET_KEY_BASE }}
          TEST_DB_URL:  ${{ secrets.TEST_DB_URL }}
          TOKEN_MAXIMUM_AGE:  ${{ secrets.TOKEN_MAXIMUM_AGE }}
          WKHTML_PATH:  ${{ secrets.WKHTML_PATH }}

  build:
    needs: test
    name: Build, push, and deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Deploy
        uses: ./.github/workflows/actions/deploy
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-level: develop
          ssh-private-key: ${{ secrets.VBT_DEPLOY_SSH_PRIVATE_KEY }}
